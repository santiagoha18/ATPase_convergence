library(phytools)
library(bioseq) # https://fkeck.github.io/bioseq/reference/index.html
library(dplyr)
library(seqinr)
#Use alignment seq.names to build a backbone phylogeny
seqs <- as_tibble.AAbin(read_fasta("/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/A1-A3_AA_alignment_convergence_modified.fasta",type="AA"))
sp_names <- seqs$label
frogA1 <- sp_names[grepl('frog',sp_names) & grepl('_A1',sp_names)]
frogA1
caecilianA1 <- sp_names[grepl('caecilian',sp_names) & grepl('_A1',sp_names)]
lizardA1 <- sp_names[grepl('lizard',sp_names) & grepl('_A1',sp_names)]
snakeA1 <- sp_names[grepl('snake',sp_names) & grepl('_A1',sp_names)]
turtleA1 <- sp_names[grepl('turtle',sp_names) & grepl('_A1',sp_names)]
mammalA1 <- sp_names[grepl('mammal',sp_names) & grepl('_A1',sp_names)]
birdA1 <- sp_names[grepl('bird',sp_names) & grepl('_A1',sp_names)]
crocodilianA1 <- sp_names[grepl('crocodilian',sp_names) & grepl('_A1',sp_names)]
frogA2 <- sp_names[grepl('frog',sp_names) & grepl('_A2',sp_names)]
caecilianA2 <- sp_names[grepl('caecilian',sp_names) & grepl('_A2',sp_names)]
lizardA2 <- sp_names[grepl('lizard',sp_names) & grepl('_A2',sp_names)]
snakeA2 <- sp_names[grepl('snake',sp_names) & grepl('_A2',sp_names)]
turtleA2 <- sp_names[grepl('turtle',sp_names) & grepl('_A2',sp_names)]
mammalA2 <- sp_names[grepl('mammal',sp_names) & grepl('_A2',sp_names)]
birdA2 <- sp_names[grepl('bird',sp_names) & grepl('_A2',sp_names)]
crocodilianA2 <- sp_names[grepl('crocodilian',sp_names) & grepl('_A2',sp_names)]
frogA3 <- sp_names[grepl('frog',sp_names) & grepl('_A3',sp_names)]
caecilianA3 <- sp_names[grepl('caecilian',sp_names) & grepl('_A3',sp_names)]
lizardA3 <- sp_names[grepl('lizard',sp_names) & grepl('_A3',sp_names)]
snakeA3 <- sp_names[grepl('snake',sp_names) & grepl('_A3',sp_names)]
turtleA3 <- sp_names[grepl('turtle',sp_names) & grepl('_A3',sp_names)]
mammalA3 <- sp_names[grepl('mammal',sp_names) & grepl('_A3',sp_names)]
birdA3 <- sp_names[grepl('bird',sp_names) & grepl('_A3',sp_names)]
crocodilianA3 <- sp_names[grepl('crocodilian',sp_names) & grepl('_A3',sp_names)]
groups <- c(frogA1,caecilianA1,lizardA1,snakeA1,turtleA1,mammalA1,birdA1,frogA2,caecilianA2,lizardA2,snakeA2,turtleA2,mammalA2,birdA2,frogA3,caecilianA3,lizardA3,snakeA3,turtleA3,mammalA3,birdA3,
crocodilianA1,crocodilianA2,crocodilianA3)
#make sure sum == length(sp_names)
sum <- 0
for(i in 1:length(groups)){
sum <- sum + length(i)
}
sum
sp_names[!(sp_names %in% groups)] # detect which species were not captured
# make backbone trees --> constrain main groups to be monophyletic --> 'backbone_tree.tre' file
cat(frogA3,"\n",sep=",")
cat(frogA1,"\n",sep=",")
cat(caecilianA1,"\n",sep=",")
cat(lizardA1,"\n",sep=",")
cat(snakeA1,"\n",sep=",")
cat(turtleA1,"\n",sep=",")
cat(mammalA1,"\n",sep=",")
cat(birdA1,"\n",sep=",")
cat(crocodilianA1,"\n",sep=",")
sp_names[!(sp_names %in% groups)] # detect which species were not captured (should only be the fish)
cat(frogA2,"\n",sep=",")
cat(caecilianA2,"\n",sep=",")
cat(lizardA2,"\n",sep=",")
cat(snakeA2,"\n",sep=",")
cat(turtleA2,"\n",sep=",")
cat(mammalA2,"\n",sep=",")
cat(birdA2,"\n",sep=",")
cat(crocodilianA2,"\n",sep=",")
sp_names[!(sp_names %in% groups)] # detect which species were not captured (should only be the fish)
cat(frogA3,"\n",sep=",")
cat(caecilianA3,"\n",sep=",")
cat(lizardA3,"\n",sep=",")
cat(snakeA3,"\n",sep=",")
cat(turtleA3,"\n",sep=",")
cat(mammalA3,"\n",sep=",")
cat(birdA3,"\n",sep=",")
cat(crocodilianA3,"\n",sep=",")
sp_names[!(sp_names %in% groups)] # detect which species were not captured (should only be the fish)
t <- read.tree("/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/RAxML/backbone_tree_amniota.tre")
tip_names <- t$tip.label
seq_names <- seqs$label
tip_names[!(tip_names %in% seq_names)]
seq_names[!(seq_names %in% tip_names)]
tr <- read.tree("/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/PhyML/Tconstrained_amniota_RAxML_bestTree.result.tre")
write.tree(tr,file="/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/PhyML/Tconstrained_amniota_RAxML_bestTree.result_NoBL.tre")
tr <- read.tree("/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/PhyML/Tconstrained_amniota_RAxML_bestTree.result.tre")
tr$edge.length <- NULL
write.tree(tr,file="/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/PhyML/Tconstrained_amniota_RAxML_bestTree.result_NoBL.tre")
library(phytools)
library(bioseq) # https://fkeck.github.io/bioseq/reference/index.html
library(dplyr)
library(seqinr)
#Use alignment seq.names to build a backbone phylogeny
seqs <- as_tibble.AAbin(read_fasta("/Users/santiagoherrera/Desktop/PROYECTOS/ATPase_Project/ASR/a1-3_v2/A1-A3_AA_alignment_convergence_modified.fasta",type="AA"))
sp_names <- seqs$label
frogA1 <- sp_names[grepl('frog',sp_names) & grepl('_A1',sp_names)]
caecilianA1 <- sp_names[grepl('caecilian',sp_names) & grepl('_A1',sp_names)]
lizardA1 <- sp_names[grepl('lizard',sp_names) & grepl('_A1',sp_names)]
snakeA1 <- sp_names[grepl('snake',sp_names) & grepl('_A1',sp_names)]
turtleA1 <- sp_names[grepl('turtle',sp_names) & grepl('_A1',sp_names)]
mammalA1 <- sp_names[grepl('mammal',sp_names) & grepl('_A1',sp_names)]
birdA1 <- sp_names[grepl('bird',sp_names) & grepl('_A1',sp_names)]
crocodilianA1 <- sp_names[grepl('crocodilian',sp_names) & grepl('_A1',sp_names)]
frogA2 <- sp_names[grepl('frog',sp_names) & grepl('_A2',sp_names)]
caecilianA2 <- sp_names[grepl('caecilian',sp_names) & grepl('_A2',sp_names)]
lizardA2 <- sp_names[grepl('lizard',sp_names) & grepl('_A2',sp_names)]
snakeA2 <- sp_names[grepl('snake',sp_names) & grepl('_A2',sp_names)]
turtleA2 <- sp_names[grepl('turtle',sp_names) & grepl('_A2',sp_names)]
mammalA2 <- sp_names[grepl('mammal',sp_names) & grepl('_A2',sp_names)]
birdA2 <- sp_names[grepl('bird',sp_names) & grepl('_A2',sp_names)]
crocodilianA2 <- sp_names[grepl('crocodilian',sp_names) & grepl('_A2',sp_names)]
frogA3 <- sp_names[grepl('frog',sp_names) & grepl('_A3',sp_names)]
caecilianA3 <- sp_names[grepl('caecilian',sp_names) & grepl('_A3',sp_names)]
lizardA3 <- sp_names[grepl('lizard',sp_names) & grepl('_A3',sp_names)]
snakeA3 <- sp_names[grepl('snake',sp_names) & grepl('_A3',sp_names)]
turtleA3 <- sp_names[grepl('turtle',sp_names) & grepl('_A3',sp_names)]
mammalA3 <- sp_names[grepl('mammal',sp_names) & grepl('_A3',sp_names)]
birdA3 <- sp_names[grepl('bird',sp_names) & grepl('_A3',sp_names)]
crocodilianA3 <- sp_names[grepl('crocodilian',sp_names) & grepl('_A3',sp_names)]
a1 <- c(frogA1,caecilianA1,mammalA1,lizardA1,snakeA1,turtleA1,crocodilianA1,birdA1)
a1 <- c(frogA1,caecilianA1,lizardA1,snakeA1,turtleA1,mammalA1,birdA1,crocodilianA1)
sp_names[!(sp_names %in% groups)] # detect which species were not captured (should only be the fish)
groups <- c(frogA1,caecilianA1,lizardA1,snakeA1,turtleA1,mammalA1,birdA1,frogA2,caecilianA2,lizardA2,snakeA2,turtleA2,mammalA2,birdA2,frogA3,caecilianA3,lizardA3,snakeA3,turtleA3,mammalA3,birdA3,
crocodilianA1,crocodilianA2,crocodilianA3)
sp_names[!(sp_names %in% groups)] # detect which species were not captured (should only be the fish)
a1 <- c(frogA1,caecilianA1,lizardA1,snakeA1,turtleA1,mammalA1,birdA1,crocodilianA1,"lungfish|Protopterus_annectens_A1_JX879765","fish|Latimeria_chalumnae_A1_XM014491963")
a2 <- c(frogA2,caecilianA2,lizardA2,snakeA2,turtleA2,mammalA2,birdA2,crocodilianA2,"lungfish|Protopterus_annectens_A2_JX879766","fish|Latimeria_chalumnae_A2_XM006001852")
a3 <- c(frogA3,caecilianA3,lizardA3,snakeA3,turtleA3,mammalA3,birdA3,crocodilianA3,"lungfish|Protopterus_annectens_A3_JX879767")
sum(length(a1),length(a2),length(a3))
length(a1)
length(a2)
length(a3)
